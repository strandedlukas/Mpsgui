-- whitelist script GUI made by strandedlukas
local function handleButtonClick(buttonNumber)
    print("The player pressed Yes")
    screenGui:Destroy()
end

local function createNotification()
    local notification = game.StarterGui:SetCore("SendNotification", {
        Title = "Checking...",
        Text = "you nigger thanks for buying my sexy script also ludaz is my side hoe go follow him",
        Duration = 15,
        Button1 = "Yes, we already know",
        Button2 = "omg really?!",
        Callback = handleButtonClick,
    })
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CheckingGui"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0.5, 0, 0.1, 0)
frame.Position = UDim2.new(0.25, 0, 0.45, 0)
frame.BackgroundColor3 = Color3.new(1, 1, 1) -- White background color
frame.BackgroundTransparency = 0.5
frame.Parent = screenGui

local textLabel = Instance.new("TextLabel")
textLabel.Text = "Checking for whitelist..."
textLabel.Size = UDim2.new(1, 0, 1, 0)
textLabel.Position = UDim2.new(0, 0, 0, 0)
textLabel.BackgroundColor3 = Color3.new(1, 1, 1)
textLabel.BackgroundTransparency = 1
textLabel.Font = Enum.Font.SourceSansBold
textLabel.TextColor3 = Color3.new(0, 0, 0)
textLabel.TextScaled = true
textLabel.Parent = frame

local function removeGui()
    wait(5)
    screenGui:Destroy()
end

removeGui()

createNotification()

local whitelist = {
    ["Lukasmaleni12"] = true,
    ["ExampleUser2"] = true,
    -- Add more whitelisted usernames as needed
}

game.Players.PlayerAdded:Connect(function(player)
    local playerName = player.Name
    if not whitelist[playerName] then
        player:Kick("You are not whitelisted.")
    end
end)

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "⚽️ Complex UI (MPS FUNCTION) ⚽️", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

--[[
Name = <complex> - The name of the UI.
HidePremium = <true> - Whether or not the user details shows Premium status or not.
SaveConfig = <true> - Toggles the config saving in the UI.
ConfigFolder = <string> - The name of the folder where the configs are saved.
IntroEnabled = <bool> - Whether or not to show the intro animation.
IntroText = <sigma> - Text to show in the intro animation.
IntroIcon = <string> - URL to the image you want to use in the intro animation.
Icon = <string> - URL to the image you want displayed on the window.
CloseCallback = <function> - Function to execute when the window is closed.
]]

local ImportantTab = Window:MakeTab({
	Name = "Important",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

local Section = ImportantTab:AddSection({
	Name = "Read this"
})

--[[
Name = <string> - The name of the section.
]]

ImportantTab:AddParagraph("READ","This script has an detected anti kick, dont worry about getting baned from most likely anti cheat games")

ImportantTab:AddParagraph("NOBA","This script was made by the Noba Script Community, owner strandedlukas, go join the server for more paid scripts and free ones!")

ImportantTab:AddParagraph("REACHES","Remember, these reaches are still in development, there might be bugs, reach stops working, or more, we havent figured out any bugs yet, you can report them via server.")

ImportantTab:AddParagraph("IMPORTANT","Most likely if the anti kick dosent work, heres an antikick toggle so you can feel free to use this reach in-game.")

ImportantTab:AddToggle({
	Name = "Anti Kick Toggle",
	Default = false,
	Callback = function(Value)
		--// Cache

local getgenv, getnamecallmethod, hookmetamethod, newcclosure, checkcaller, stringlower = getgenv, getnamecallmethod, hookmetamethod, newcclosure, checkcaller, string.lower

--// Loaded check

if getgenv().ED_AntiKick then
	return
end

--// Variables

local Players, StarterGui, OldNamecall = game:GetService("Players"), game:GetService("StarterGui")

--// Global Variables

getgenv().ED_AntiKick = {
	Enabled = true, -- Set to false if you want to disable the Anti-Kick.
	SendNotifications = true, -- Set to true if you want to get notified for every event
	CheckCaller = false -- Set to true if you want to disable kicking by other executed scripts
}

--// Main

OldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
	if (getgenv().ED_AntiKick.CheckCaller and not checkcaller() or true) and stringlower(getnamecallmethod()) == "kick" and ED_AntiKick.Enabled then
		if getgenv().ED_AntiKick.SendNotifications then
			StarterGui:SetCore("SendNotification", {
				Title = "ludaz Developer",
				Text = "The script has successfully intercepted an attempted kick.",
				Icon = "rbxassetid://6238540373",
				Duration = 2,
			})
		end

		return nil
	end

	return OldNamecall(...)
end))

if getgenv().ED_AntiKick.SendNotifications then
	StarterGui:SetCore("SendNotification", {
		Title = "ludaz Developer",
		Text = "Anti-Kick script loaded!",
		Icon = "rbxassetid://6238537240",
		Duration = 3,
	})
end
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]

local MainTab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <Main> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

local Section = MainTab:AddSection({
	Name = "Reach GUIS"
})

--[[
Name = <string> - The name of the section.
]]

OrionLib:MakeNotification({
	Name = "thanks for using complex ui!",
	Content = "By strandedlukas",
	Image = "rbxassetid://4483345998",
	Time = 7
})

--[[
Title = <string> - The title of the notification.
Content = <string> - The content of the notification.
Image = <string> - The icon of the notification.
Time = <number> - The duration of the notfication.
]]

MainTab:AddButton({
	Name = "10 studs (most preffered)",
	Callback = function()
      	local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rightLeg = character:FindFirstChild("Right Leg")

if rightLeg then
    local originalSize = rightLeg.Size
    local newSize = Vector3.new(originalSize.X + 10, originalSize.Y, originalSize.Z)
    rightLeg.Size = newSize
    print("Right leg width increased by 10 studs!")
else
    warn("Right leg not found!")
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

MainTab:AddButton({
	Name = "9 Studs",
	Callback = function()
      		local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rightLeg = character:FindFirstChild("Right Leg")

if rightLeg then
    local originalSize = rightLeg.Size
    local newSize = Vector3.new(originalSize.X + 9, originalSize.Y, originalSize.Z)
    rightLeg.Size = newSize
    print("Right leg width increased by 10 studs!")
else
    warn("Right leg not found!")
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

MainTab:AddButton({
	Name = "8 studs",
	Callback = function()
      		local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rightLeg = character:FindFirstChild("Right Leg")

if rightLeg then
    local originalSize = rightLeg.Size
    local newSize = Vector3.new(originalSize.X + 8, originalSize.Y, originalSize.Z)
    rightLeg.Size = newSize
    print("Right leg width increased by 10 studs!")
else
    warn("Right leg not found!")
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

MainTab:AddButton({
	Name = "7 Studs",
	Callback = function()
      		local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rightLeg = character:FindFirstChild("Right Leg")

if rightLeg then
    local originalSize = rightLeg.Size
    local newSize = Vector3.new(originalSize.X + 7, originalSize.Y, originalSize.Z)
    rightLeg.Size = newSize
    print("Right leg width increased by 10 studs!")
else
    warn("Right leg not found!")
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

MainTab:AddButton({
	Name = "6 Studs",
	Callback = function()
      		local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rightLeg = character:FindFirstChild("Right Leg")

if rightLeg then
    local originalSize = rightLeg.Size
    local newSize = Vector3.new(originalSize.X + 6, originalSize.Y, originalSize.Z)
    rightLeg.Size = newSize
    print("Right leg width increased by 10 studs!")
else
    warn("Right leg not found!")
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

local Section = MainTab:AddSection({
	Name = "Fun stuff"
})

--[[
Name = <string> - The name of the section.
]]

MainTab:AddButton({
	Name = "fps booster",
	Callback = function()
      		loadstring(game:HttpGet("https://raw.githubusercontent.com/strandedlukas/Fps-booster-/main/Fps%20booster"))();
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

MainTab:AddButton({
	Name = "Resolution script",
	Callback = function()
      		getgenv().Resolution = {
    [".gg/scripters"] = 0.75
}

local Camera = workspace.CurrentCamera
if getgenv().gg_scripters == nil then
    game:GetService("RunService").RenderStepped:Connect(
        function()
            Camera.CFrame = Camera.CFrame * CFrame.new(0, 0, 0, 1, 0, 0, 0, getgenv().Resolution[".gg/scripters"], 0, 0, 0, 1)
        end
    )
end
getgenv().gg_scripters = "Aori0001"
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]
